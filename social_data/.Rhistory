# linear discriminant function analysis to classify calls: bat vs group
# Julia Vrtilek
# 10 Oct 2023
# load packages
library(tidyverse)
library(MASS)
# set file paths and wd
JuliaPath <- "/Users/jkvrtilek/Desktop/OSU/PhD/Calls/"
#### data wrangling
# read in data
raw <- read_csv(paste(JuliaPath, "whole_recordings_renamed_metadata.csv", sep = "")) %>%
dplyr::select(3,6,8,9)
# determine which bats we're using
# get tole and las pavas bats from 2016/2017
d <- raw %>%
distinct() %>%
filter(capture.site == "las.pavas" | capture.site == "tole") %>%
separate(date, into = c("year", "month", "day"), sep = "-", remove = FALSE) %>%
mutate(date = as.Date(date)) %>%
mutate(year = as.integer(year)) %>%
filter(year < 2018)
# get call numbers for each bat
callnum <- readRDS(paste(JuliaPath, "panama_samples.RDS", sep = "")) %>%
subset(bat %in% d$bat_ID) %>%
arrange(post)
# linear discriminant function analysis to classify calls: bat vs group
# Julia Vrtilek
# 10 Oct 2023
# load packages
library(tidyverse)
library(MASS)
# set file paths and wd
JuliaPath <- "/Users/jkvrtilek/Desktop/OSU/PhD/Calls/"
#### data wrangling
# read in data
raw <- read_csv(paste(JuliaPath, "whole_recordings_renamed_metadata.csv", sep = "")) %>%
dplyr::select(3,6,8,9)
# determine which bats we're using
# get tole and las pavas bats from 2016/2017
d <- raw %>%
distinct() %>%
filter(capture.site == "las.pavas" | capture.site == "tole") %>%
separate(date, into = c("year", "month", "day"), sep = "-", remove = FALSE) %>%
mutate(date = as.Date(date)) %>%
mutate(year = as.integer(year)) %>%
filter(year < 2018)
# get call numbers for each bat
# callnum <- readRDS(paste(JuliaPath, "panama_samples.RDS", sep = "")) %>%
subset(bat %in% d$bat_ID) %>%
arrange(post)
# linear discriminant function analysis to classify calls: bat vs group
# Julia Vrtilek
# 10 Oct 2023
# load packages
library(tidyverse)
library(MASS)
# set file paths and wd
JuliaPath <- "/Users/jkvrtilek/Desktop/OSU/PhD/Calls/"
#### data wrangling
# read in data
raw <- read_csv(paste(JuliaPath, "whole_recordings_renamed_metadata.csv", sep = "")) %>%
dplyr::select(3,6,8,9)
# determine which bats we're using
# get tole and las pavas bats from 2016/2017
d <- raw %>%
distinct() %>%
filter(capture.site == "las.pavas" | capture.site == "tole") %>%
separate(date, into = c("year", "month", "day"), sep = "-", remove = FALSE) %>%
mutate(date = as.Date(date)) %>%
mutate(year = as.integer(year)) %>%
filter(year < 2018)
# get call numbers for each bat
# callnum <- readRDS(paste(JuliaPath, "panama_samples.RDS", sep = "")) %>%
#  subset(bat %in% d$bat_ID) %>%
#  arrange(post)
# callnum
# NOTE: chose to remove all bats with less than 30 calls. Removing bats with less than 100 calls cuts two Las Pavas bats, but might be better because Mundry's code takes smallest number of calls so that all groups have same number.
# using all las pavas bats except dos (only 3 calls)
# NOT ROBUST - would be better to join dfs and filter on callnum, but that would remove NAs
las.pavas <- d %>%
filter(capture.site == "las.pavas") %>%
filter(bat_ID != "dos")
# using all tole bats recorded after introduction date except ss (only 1 post-intro call)
# NOT ROBUST - would be better to join dfs and filter on callnum
temp <- d %>%
filter(capture.site == "tole") %>%
filter(date > "2016-11-01") %>%
filter(bat_ID != "ss")
tole <- d %>%
subset(bat_ID %in% unique(temp$bat_ID))
#### divide into groups by time
# add column of group names
d2 <- rbind(las.pavas,tole) %>%
mutate(
group = case_when(capture.site == "las.pavas" & date < "2017-01-01" ~ "lp1",
capture.site == "las.pavas" & date > "2017-01-01" ~ "lp2",
capture.site == "tole" & date < "2016-08-01" ~ "tole1",
capture.site == "tole" & date > "2016-08-01" & date < "2017-01-01" ~ "tole2",
capture.site == "tole" & date > "2017-01-01" ~ "tole3")
) %>%
mutate(date.bat = paste(date,bat_ID,sep = "_"))
# get lists of bats present in tole2 and tole3
tole2 <- d2 %>%
filter(group == "tole2")
tole2bats <- unique(tole2$bat_ID)
tole3 <- d2 %>%
filter(group == "tole3")
tole3bats <- unique(tole3$bat_ID)
# note: scs is present in both post-intro Tole groups
#### load and tidy spectral and temporal measurements
raw2 <- readRDS(paste(JuliaPath, "giantspecanclean.RDS", sep = ""))
#### load and tidy spectral and temporal measurements
raw2 <- readRDS(paste(JuliaPath, "ds_completeSpecan.RDS", sep = ""))
# select only relevant rows
specan <- raw2 %>%
separate(sound.files, into = c("date", "bat", "WAV", "sel"), sep = "_", remove = TRUE) %>%
dplyr::select(1:2,6:(ncol(raw2)+3)) %>%
mutate(date.bat = paste(date,bat,sep = "_")) %>%
subset(date.bat %in% d2$date.bat)
# select only relevant columns
temp <- d2 %>%
dplyr::select(group, date.bat)
# add group ID to measurements
specan2 <- left_join(specan, temp, by = "date.bat")
# rearrange into required order
specan2 <- specan2 %>%
mutate(individual = bat) %>%
dplyr::select(group, individual, 3:(ncol(specan2)-2))
#### make dataframe for each group
# tole pre-intro bats present at 2nd timepoint
tole_pre_2 <- specan2 %>%
filter(group == "tole1") %>%
subset(individual %in% tole2bats)
# tole pre-intro bats present at 3rd timepoint
tole_pre_3 <- specan2 %>%
filter(group == "tole1") %>%
subset(individual %in% tole3bats)
# tole bats at 2nd timepoint
tole_2 <- specan2 %>%
filter(group == "tole2")
# tole bats at 3rd timepoint
tole_3 <- specan2 %>%
filter(group == "tole3")
# las pavas bats at 2nd timepoint
lp_2 <- specan2 %>%
filter(group == "lp1")
# las pavas bats at 3rd timepoint
lp_3 <- specan2 %>%
filter(group == "lp2")
ccc_pre <- tole_pre_2 %>%
filter(individual == "ccc")
ccc_post <- tole_2 %>%
filter(individual == "ccc")
r_pre <- tole_pre_2 %>%
filter(individual == "r")
r_post <- tole_2 %>%
filter(individual == "r")
rc_pre <- tole_pre_2 %>%
filter(individual == "rc")
rc_post <- tole_2 %>%
filter(individual == "rc")
scs_pre <- tole_pre_2 %>%
filter(individual == "scs")
scs_post2 <- tole_2 %>%
filter(individual == "scs")
scs_post3 <- tole_3 %>%
filter(individual == "scs")
ccs_pre <- tole_pre_3 %>%
filter(individual == "ccs")
ccs_post <- tole_3 %>%
filter(individual == "ccs")
dcd_pre <- tole_pre_3 %>%
filter(individual == "dcd")
dcd_post <- tole_3 %>%
filter(individual == "dcd")
cs_pre <- tole_pre_3 %>%
filter(individual == "cs")
cs_post <- tole_3 %>%
filter(individual == "cs")
all_pre2 <- list(ccc_pre,r_pre,rc_pre,scs_pre)
all_post2 <- list(ccc_post,r_post,rc_post,scs_post2)
all_pre3 <- list(scs_pre,ccs_pre,dcd_pre,cs_pre)
all_post3 <- list(scs_post3,ccs_post,dcd_post,cs_post)
dist2 <- data.frame(matrix(ncol = 3, nrow = 4))
colnames(dist2) <- c("bat","pre-introduction","post-introduction")
dist2[,1] <- tole2bats
dist2[4,1] <- "scs2"
dist3 <- data.frame(matrix(ncol = 3, nrow = 4))
colnames(dist3) <- c("bat","pre-introduction","post-introduction")
dist3[,1] <- tole3bats
dist3[4,1] <- "scs3"
lp_2$individual <- "lp2"
library(diffr)
diffr("/Users/jkvrtilek/Desktop/untitled folder/social-bond-call-similarity/correlate-2015-bonds-with-calls-04.R","/Users/jkvrtilek/Desktop/untitled folder/social-bond-call-similarity/correlate-2015-bonds-with-calls-05-poster_figure.R")
