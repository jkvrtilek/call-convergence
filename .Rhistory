# good rule of thumb is 20 obs per variable
predictors <- ncol(raw) - 3
min.sample.size <- predictors * 20
# filter calls by min sample size
d2 <- d %>%
filter(sample.size > min.sample.size)
# classify calls to bat using dfa with cross-validation (leave one-out classification)
dfa <- lda(bat ~
duration+
meanfreq+
sd+
freq.median+
freq.Q25+
freq.Q75+
freq.IQR+
time.median+
time.Q25+
time.Q75+
time.IQR+
skew+
kurt+
sp.ent+
time.ent+
entropy+
sfm+
meandom+
mindom+
maxdom+
dfrange+
modindx+
startdom+
enddom+
dfslope+
meanpeakf+
peakf+
maxslope+
minslope+
abs_minslope+
pos_slopes+
neg_slopes+
turns+
meanslope+
segments,
CV=T,
data=d2)
# get classification matrix
cm <- table(d2$bat, dfa$class)
# get overall correct classification rate (accuracy)
# this is the best accuracy estimate
correct.cases <- sum(diag(cm))
all.cases <- sum(cm)
accuracy <- correct.cases/all.cases
accuracy
# get mean and range of correct assignments/all assignments to each bat
range(diag(cm)/colSums(cm), na.rm=T)
mean(diag(cm)/colSums(cm), na.rm=T)
# get mean and range of correct assignments/all calls from each bat
range(diag(cm)/rowSums(cm), na.rm=T)
mean(diag(cm)/rowSums(cm), na.rm=T)
# save classification matrix
write.csv(cm, "dfa-cv-results-standard.csv")
# plot accuracy as a function of sampling effort
tibble(bat= colnames(cm),
accuracy= diag(cm)/colSums(cm),### I used column sums rather than row sums
n.cases= colSums(cm)) %>% ###
ggplot(aes(x=log(n.cases), y=accuracy))+
geom_point(size=2)+
geom_smooth(method= "lm")+
xlab("log10 number of cases")+
ylab('correct classification rate')+
ggtitle('accuracy by sampling effort per bat')
# classify calls to bat using a single dfa without cross validation
# this method can give elevated accuracy (but doesn't matter because we are using this to get cross-classification rates)
dfa2 <- lda(bat ~
duration+
meanfreq+
sd+
freq.median+
freq.Q25+
freq.Q75+
freq.IQR+
time.median+
time.Q25+
time.Q75+
time.IQR+
skew+
kurt+
sp.ent+
time.ent+
entropy+
sfm+
meandom+
mindom+
maxdom+
dfrange+
modindx+
startdom+
enddom+
dfslope+
meanpeakf+
peakf,
CV=F,
data=d2)
# get classification rates
predictions <- predict(dfa2)
d2$prediction <- predictions$class
cm2 <- table(d2$bat, d2$prediction)
# get overall correct classification rate
correct.cases <- sum(diag(cm2))
all.cases <- sum(cm2)
accuracy2 <- correct.cases/all.cases
accuracy2
# get vocal distance as Mahalanobis distance between group centroids
meanGroup <- dfa2$means
distance <- as.matrix(dist(meanGroup %*% dfa2$scaling))
# save vocal similarity
write.csv(distance, file= "vocal-distance-lda.csv", row.names=F)
# get proportion of variance explained by the discriminant functions
props.df <- dfa2$svd*100/sum(dfa2$svd)
tibble(prop= props.df, x= 1:length(props.df)) %>%
ggplot(aes(x=x, y=prop))+
geom_col()+
xlab("discriminant function")+
ylab("proportion of variance explained")
# and the coefficients of the linear discriminant functions (these tell you which variables were most important for identifying cases)
dfa2$scaling
# save all DFA loadings sorted by absolute value of DF1
loadings <-
dfa2$scaling %>%
as.data.frame() %>%
arrange(desc(abs(LD1)))
write.csv(loadings, "dfa-loadings.csv")
detach("package:MASS", unload = TRUE)
# set working directory
setwd("/Users/jkvrtilek/Desktop/OSU/PhD/GitHub/call-convergence/")
# load packages
library(tidyverse)
library(gdata)
# load kinship data
kin_raw <- read_csv("social_data/kinship-all-bats.csv") %>%
mutate(dir.dyad = paste(bat1,bat2,sep="_")) %>%
mutate(kin.r = kinship) %>%
select(dir.dyad,bat1,bat2,kin.r,5:8)
# change kinship for bats from same site (Tole) in diff seasons from 0 to NA
temp <- kin_raw %>%
filter(site1==site2) %>%
filter(season1!=season2)
kin <- kin_raw %>%
mutate(kinship = case_when(dir.dyad %in% temp$dir.dyad ~ NA,
!(dir.dyad %in% temp$dir.dyad) ~ kin.r)) %>%
select(dir.dyad:bat2, kinship, site1:season2)
rates15 <- read_csv("social_data/2010-2014_foodsharing/food_sharing_rates_2010-2014.csv")
View(rates15)
View(rates15)
View(rates15)
View(rates15)
# load phd data
rates15 <- read_csv("social_data/2010-2014_foodsharing/food_sharing_rates_2010-2014.csv") %>%
mutate(dir.dyad = paste(donor,receiver,sep="_")) %>%
mutate(grooming = NA) %>%
mutate(foodsharing = donation.rate) %>%
select(dir.dyad,grooming,foodsharing,donor.sex,receiver.sex)
View(rates15)
food17 <- readRDS("social_data/2016-2017_relationship_formation/vamp_dyadic_foodsharing_rates_2016-2017.csv")
food17 <- read.csv("social_data/2016-2017_relationship_formation/vamp_dyadic_foodsharing_rates_2016-2017.csv")
View(food17)
load("/Users/jkvrtilek/Desktop/OSU/PhD/GitHub/call-convergence/social_data/2016-2017_relationship_formation/new_bonds_data.RData")
load("/Users/jkvrtilek/Desktop/OSU/PhD/GitHub/call-convergence/social_data/2016-2017_relationship_formation/new_bonds_data.RData")
View(dyads)
View(rates)
View(trials)
View(events)
# combine data from 2015, 2017, 2019, and call distance to make a dataframe
# columns: Directed dyad, Vocal distance, Kinship, Allogrooming given, Allogrooming received, Food given, Food received, Capture population bat 1, Capture population bat 2, Sex 1, Sex 2
# Julia Vrtilek
# 29 March 2024, updated 10 April 2024, 10 May 2024
# set working directory
setwd("/Users/jkvrtilek/Desktop/OSU/PhD/GitHub/call-convergence/")
# load packages
library(tidyverse)
library(gdata)
# load kinship data
kin_raw <- read_csv("social_data/kinship-all-bats.csv") %>%
mutate(dir.dyad = paste(bat1,bat2,sep="_")) %>%
mutate(kin.r = kinship) %>%
select(dir.dyad,bat1,bat2,kin.r,5:8)
# change kinship for bats from same site (Tole) in diff seasons from 0 to NA
temp <- kin_raw %>%
filter(site1==site2) %>%
filter(season1!=season2)
kin <- kin_raw %>%
mutate(kinship = case_when(dir.dyad %in% temp$dir.dyad ~ NA,
!(dir.dyad %in% temp$dir.dyad) ~ kin.r)) %>%
select(dir.dyad:bat2, kinship, site1:season2)
# load phd data
rates15 <- read.csv("social_data/2010-2014_foodsharing/food_sharing_rates_2010-2014.csv") %>%
mutate(dir.dyad = paste(donor,receiver,sep="_")) %>%
mutate(grooming = NA) %>%
mutate(foodsharing = donation.rate) %>%
select(dir.dyad,grooming,foodsharing,donor.sex,receiver.sex)
# load and combine postdoc data
food17 <- read.csv("social_data/2016-2017_relationship_formation/vamp_dyadic_foodsharing_rates_2016-2017.csv") %>%
mutate(foodsharing = rate) %>%
select(dir.dyad,foodsharing)
food17 <- read.csv("social_data/2016-2017_relationship_formation/vamp_dyadic_foodsharing_rates_2016-2017.csv")
View(food17)
View(food17)
groom17 <- read.csv("social_data/2016-2017_relationship_formation/vamp_dyadic_grooming_rates_2016-2017.csv")
View(groom17)
# combine data from 2015, 2017, 2019, and call distance to make a dataframe
# columns: Directed dyad, Vocal distance, Kinship, Allogrooming given, Allogrooming received, Food given, Food received, Capture population bat 1, Capture population bat 2, Sex 1, Sex 2
# Julia Vrtilek
# 29 March 2024, updated 10 April 2024, 10 May 2024
# set working directory
setwd("/Users/jkvrtilek/Desktop/OSU/PhD/GitHub/call-convergence/")
# load packages
library(tidyverse)
library(gdata)
# load kinship data
kin_raw <- read_csv("social_data/kinship-all-bats.csv") %>%
mutate(dir.dyad = paste(bat1,bat2,sep="_")) %>%
mutate(kin.r = kinship) %>%
select(dir.dyad,bat1,bat2,kin.r,5:8)
# change kinship for bats from same site (Tole) in diff seasons from 0 to NA
temp <- kin_raw %>%
filter(site1==site2) %>%
filter(season1!=season2)
kin <- kin_raw %>%
mutate(kinship = case_when(dir.dyad %in% temp$dir.dyad ~ NA,
!(dir.dyad %in% temp$dir.dyad) ~ kin.r)) %>%
select(dir.dyad:bat2, kinship, site1:season2)
# load phd data
rates15 <- read.csv("social_data/2010-2014_foodsharing/food_sharing_rates_2010-2014.csv") %>%
mutate(dir.dyad = paste(donor,receiver,sep="_")) %>%
mutate(grooming = NA) %>%
mutate(foodsharing = donation.rate) %>%
select(dir.dyad,grooming,foodsharing,donor.sex,receiver.sex)
# load and combine postdoc data
food17 <- read.csv("social_data/2016-2017_relationship_formation/vamp_dyadic_foodsharing_rates_2016-2017.csv") %>%
mutate(foodsharing = donation.rate) %>%
select(dir.dyad,foodsharing)
food17 <- read.csv("social_data/2016-2017_relationship_formation/vamp_dyadic_foodsharing_rates_2016-2017.csv")
View(food17)
mutate(foodsharing = donation.rate) %>%
select(dir.dyad,foodsharing)
# load and combine postdoc data
food17 <- read.csv("social_data/2016-2017_relationship_formation/vamp_dyadic_foodsharing_rates_2016-2017.csv") %>%
mutate(dir.dyad = paste(actor,receiver,"_")) %>%
mutate(foodsharing = donation.rate) %>%
select(dir.dyad,foodsharing)
View(food17)
# load and combine postdoc data
food17 <- read.csv("social_data/2016-2017_relationship_formation/vamp_dyadic_foodsharing_rates_2016-2017.csv") %>%
mutate(dir.dyad = paste(actor,receiver,sep="_")) %>%
mutate(foodsharing = donation.rate) %>%
select(dir.dyad,foodsharing)
View(food17)
groom17 <- read.csv("social_data/2016-2017_relationship_formation/vamp_dyadic_grooming_rates_2016-2017.csv") %>%
mutate(dir.dyad = paste(actor,receiver,sep="_")) %>%
mutate(grooming = grooming.rate) %>%
select(dir.dyad,grooming)
rates17 <- left_join(groom17,food17,by="dir.dyad")
# load lab data
rates19 <- read.csv("social_data/2019_grooming_rates.csv") %>%
mutate(grooming = rate) %>%
mutate(foodsharing = NA) %>%
select(dir.dyad,grooming,foodsharing)
# load lab data
rates19 <- read.csv("social_data/2019_grooming/2019_grooming_rates.csv") %>%
mutate(grooming = rate) %>%
mutate(foodsharing = NA) %>%
select(dir.dyad,grooming,foodsharing)
# load lab data
rates19 <- read.csv("social_data/2019_grooming/2019_grooming_rates.csv") %>%
mutate(grooming = grooming.rate) %>%
mutate(foodsharing = NA) %>%
select(dir.dyad,grooming,foodsharing)
View(rates19)
View(rates15)
View(rates15)
# combine data from 2015, 2017, 2019, and call distance to make a dataframe
# columns: Directed dyad, Vocal distance, Kinship, Allogrooming given, Allogrooming received, Food given, Food received, Capture population bat 1, Capture population bat 2, Sex 1, Sex 2
# Julia Vrtilek
# 29 March 2024, updated 10 April 2024, 10 May 2024
# set working directory
setwd("/Users/jkvrtilek/Desktop/OSU/PhD/GitHub/call-convergence/")
# load packages
library(tidyverse)
library(gdata)
# load kinship data
kin_raw <- read_csv("social_data/kinship-all-bats.csv") %>%
mutate(dir.dyad = paste(bat1,bat2,sep="_")) %>%
mutate(kin.r = kinship) %>%
select(dir.dyad,bat1,bat2,kin.r,5:8)
# change kinship for bats from same site (Tole) in diff seasons from 0 to NA
temp <- kin_raw %>%
filter(site1==site2) %>%
filter(season1!=season2)
kin <- kin_raw %>%
mutate(kinship = case_when(dir.dyad %in% temp$dir.dyad ~ NA,
!(dir.dyad %in% temp$dir.dyad) ~ kin.r)) %>%
select(dir.dyad:bat2, kinship, site1:season2)
# load phd data
rates15 <- read.csv("social_data/2010-2014_foodsharing/food_sharing_rates_2010-2014.csv") %>%
mutate(dir.dyad = paste(donor,receiver,sep="_")) %>%
mutate(grooming = NA) %>%
mutate(foodsharing = donation.rate) %>%
select(dir.dyad,grooming,foodsharing,donor.sex,receiver.sex)
# load and combine postdoc data
food17 <- read.csv("social_data/2016-2017_relationship_formation/vamp_dyadic_foodsharing_rates_2016-2017.csv") %>%
mutate(dir.dyad = paste(actor,receiver,sep="_")) %>%
mutate(foodsharing = donation.rate) %>%
select(dir.dyad,foodsharing)
groom17 <- read.csv("social_data/2016-2017_relationship_formation/vamp_dyadic_grooming_rates_2016-2017.csv") %>%
mutate(dir.dyad = paste(actor,receiver,sep="_")) %>%
mutate(grooming = grooming.rate) %>%
select(dir.dyad,grooming)
rates17 <- left_join(groom17,food17,by="dir.dyad")
# load lab data
rates19 <- read.csv("social_data/2019_grooming/2019_grooming_rates.csv") %>%
mutate(grooming = grooming.rate) %>%
mutate(foodsharing = NA) %>%
select(dir.dyad,grooming,foodsharing)
# combine rates for left_join
all_rates <- rbind(rates15,rates17,rates19)
rates19 <- read.csv("social_data/2019_grooming/2019_grooming_rates.csv")
rates19 <- read.csv("social_data/2019_grooming/2019_grooming_rates.csv")
View(rates19)
# get key
key <- read_csv("2019batkey.csv")
setwd("/Users/jkvrtilek/Desktop/OSU/PhD/GitHub/call-convergence/social_data/2019_grooming")
# get key
key <- read_csv("2019batkey.csv")
View(key)
View(key)
# extract 2019 grooming data from Imran's stuff
# Julia Vrtilek
# revised 9 May 2024
# clear workspace
rm(list=ls())
# load packages
library(tidyverse)
library(gdata)
setwd("/Users/jkvrtilek/Desktop/OSU/PhD/GitHub/call-convergence/social_data/2019_grooming")
# get grooming data
load("rates2019_2021-05-18.Rdata")
rates <- rates2019 %>%
filter(cage == "big_cage") %>%
filter(behav == "g") %>%
select(6:11) %>%
group_by(dyad,actor,receiver) %>%
summarize(grooming.sec = sum(rate), hours = n()) %>%
ungroup() %>%
mutate(seconds = hours*60*60) %>%
mutate(grooming.rate = grooming.sec/seconds)
# get key
key <- read_csv("2019batkey.csv")
# change actor name
key_act <- key %>%
mutate(actor = final.bat.ID) %>%
mutate(actor2 = bat.name) %>%
select(actor,actor2,sex)
rates2 <- left_join(rates, key_act, by = "actor")
# change bat2 name
key_rec <- key %>%
mutate(receiver = final.bat.ID) %>%
mutate(receiver2 = bat.name) %>%
select(receiver,receiver2,sex)
rates3 <- left_join(rates2, key_rec, by = "receiver")
View(rates3)
# extract 2019 grooming data from Imran's stuff
# Julia Vrtilek
# revised 9 May 2024
# clear workspace
rm(list=ls())
# load packages
library(tidyverse)
library(gdata)
setwd("/Users/jkvrtilek/Desktop/OSU/PhD/GitHub/call-convergence/social_data/2019_grooming")
# get grooming data
load("rates2019_2021-05-18.Rdata")
rates <- rates2019 %>%
filter(cage == "big_cage") %>%
filter(behav == "g") %>%
select(6:11) %>%
group_by(dyad,actor,receiver) %>%
summarize(grooming.sec = sum(rate), hours = n()) %>%
ungroup() %>%
mutate(seconds = hours*60*60) %>%
mutate(grooming.rate = grooming.sec/seconds)
# get key
key <- read_csv("2019batkey.csv")
# change actor name
key_act <- key %>%
mutate(actor = final.bat.ID) %>%
mutate(actor2 = bat.name) %>%
mutate(actor.sex = sex) %>%
select(actor,actor2,actor.sex)
rates2 <- left_join(rates, key_act, by = "actor")
# change bat2 name
key_rec <- key %>%
mutate(receiver = final.bat.ID) %>%
mutate(receiver2 = bat.name) %>%
mutate(receiver.sex = sex) %>%
select(receiver,receiver2,receiver.sex)
rates3 <- left_join(rates2, key_rec, by = "receiver")
View(rates3)
rates4 <- rates3 %>%
mutate(dir.dyad = paste(actor2,receiver2,sep="_")) %>%
select(dir.dyad,actor2,receiver2,grooming.rate) %>%
mutate(actor = actor2) %>%
mutate(receiver = receiver2) %>%
select(dir.dyad,actor,receiver,grooming.rate,actor.sex,receiver.sex)
rates4 <- rates3 %>%
mutate(dir.dyad = paste(actor2,receiver2,sep="_")) %>%
select(dir.dyad,actor2,receiver2,grooming.rate,actor.sex,receiver.sex) %>%
mutate(actor = actor2) %>%
mutate(receiver = receiver2) %>%
select(dir.dyad,actor,receiver,grooming.rate,actor.sex,receiver.sex)
View(rates4)
# extract 2019 grooming data from Imran's stuff
# Julia Vrtilek
# revised 9 May 2024
# clear workspace
rm(list=ls())
# load packages
library(tidyverse)
library(gdata)
setwd("/Users/jkvrtilek/Desktop/OSU/PhD/GitHub/call-convergence/social_data/2019_grooming")
# get grooming data
load("rates2019_2021-05-18.Rdata")
rates <- rates2019 %>%
filter(cage == "big_cage") %>%
filter(behav == "g") %>%
select(6:11) %>%
group_by(dyad,actor,receiver) %>%
summarize(grooming.sec = sum(rate), hours = n()) %>%
ungroup() %>%
mutate(seconds = hours*60*60) %>%
mutate(grooming.rate = grooming.sec/seconds)
# get key
key <- read_csv("2019batkey.csv")
# change actor name
key_act <- key %>%
mutate(actor = final.bat.ID) %>%
mutate(actor2 = bat.name) %>%
mutate(actor.sex = sex) %>%
select(actor,actor2,actor.sex)
rates2 <- left_join(rates, key_act, by = "actor")
# change bat2 name
key_rec <- key %>%
mutate(receiver = final.bat.ID) %>%
mutate(receiver2 = bat.name) %>%
mutate(receiver.sex = sex) %>%
select(receiver,receiver2,receiver.sex)
rates3 <- left_join(rates2, key_rec, by = "receiver")
rates4 <- rates3 %>%
mutate(dir.dyad = paste(actor2,receiver2,sep="_")) %>%
select(dir.dyad,actor2,receiver2,grooming.rate,actor.sex,receiver.sex) %>%
mutate(actor = actor2) %>%
mutate(receiver = receiver2) %>%
select(dir.dyad,actor,receiver,grooming.rate,actor.sex,receiver.sex)
write.csv(rates4,"2019_grooming_rates.csv")
rates19 <- read.csv("social_data/2019_grooming/2019_grooming_rates.csv")
# set working directory
setwd("/Users/jkvrtilek/Desktop/OSU/PhD/GitHub/call-convergence/")
rates19 <- read.csv("social_data/2019_grooming/2019_grooming_rates.csv")
View(rates19)
# combine data from 2015, 2017, 2019, and call distance to make a dataframe
# columns: Directed dyad, Vocal distance, Kinship, Allogrooming given, Allogrooming received, Food given, Food received, Capture population bat 1, Capture population bat 2, Sex 1, Sex 2
# Julia Vrtilek
# 29 March 2024, updated 10 April 2024, 10 May 2024
# set working directory
setwd("/Users/jkvrtilek/Desktop/OSU/PhD/GitHub/call-convergence/")
# load packages
library(tidyverse)
library(gdata)
# load kinship data
kin_raw <- read_csv("social_data/kinship-all-bats.csv") %>%
mutate(dir.dyad = paste(bat1,bat2,sep="_")) %>%
mutate(kin.r = kinship) %>%
select(dir.dyad,bat1,bat2,kin.r,5:8)
# change kinship for bats from same site (Tole) in diff seasons from 0 to NA
temp <- kin_raw %>%
filter(site1==site2) %>%
filter(season1!=season2)
kin <- kin_raw %>%
mutate(kinship = case_when(dir.dyad %in% temp$dir.dyad ~ NA,
!(dir.dyad %in% temp$dir.dyad) ~ kin.r)) %>%
select(dir.dyad:bat2, kinship, site1:season2)
# load phd data
rates15 <- read.csv("social_data/2010-2014_foodsharing/food_sharing_rates_2010-2014.csv") %>%
mutate(dir.dyad = paste(donor,receiver,sep="_")) %>%
mutate(grooming = NA) %>%
mutate(foodsharing = donation.rate) %>%
mutate(actor.sex = donor.sex) %>%
select(dir.dyad,grooming,foodsharing,actor.sex,receiver.sex)
# load and combine postdoc data
food17 <- read.csv("social_data/2016-2017_relationship_formation/vamp_dyadic_foodsharing_rates_2016-2017.csv") %>%
mutate(dir.dyad = paste(actor,receiver,sep="_")) %>%
mutate(foodsharing = donation.rate) %>%
select(dir.dyad,foodsharing)
groom17 <- read.csv("social_data/2016-2017_relationship_formation/vamp_dyadic_grooming_rates_2016-2017.csv") %>%
mutate(dir.dyad = paste(actor,receiver,sep="_")) %>%
mutate(grooming = grooming.rate) %>%
select(dir.dyad,grooming)
rates17 <- left_join(groom17,food17,by="dir.dyad")
# load lab data
rates19 <- read.csv("social_data/2019_grooming/2019_grooming_rates.csv") %>%
mutate(grooming = grooming.rate) %>%
mutate(foodsharing = NA) %>%
select(dir.dyad,grooming,foodsharing,actor.sex,receiver.sex)
